{"version":3,"sources":["components/SemanticDatasetTab.js","components/SemanticDatasetTabs.js","components/App.js","index.js"],"names":["DatasetTab","props","react_default","a","createElement","Menu","Item","key","name","active","isActive","onClick","changeTab","as","title","Icon","removeTab","tabName","DatasetOne","display","lib","schema","personSchema","uischema","personUISchema","path","DatasetTwo","addressSchema","addressUISchema","DatasetThree","initialDatasets","MenuTabularOnLeft","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","defaultDisplay","state","activeItem","datasets","bind","assertThisInitialized","renderTabFromDataset","renderTabs","addDataset","setState","tabs","newTabs","filter","obj","undefined","length","console","log","dataset","_this2","SemanticDatasetTab","_this3","map","push","Grid","Column","width","fluid","vertical","tabular","stretched","Component","App","Container","style","margin","SemanticDatasetTabs","React","type","properties","person","address","store","createStore","combineReducers","jsonforms","jsonformsReducer","renderers","materialRenderers","dispatch","Actions","init","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.119dcad1.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\n// Tab Component\nfunction DatasetTab(props) {\n    return (\n        <Menu.Item key={props.name} active={props.isActive} onClick={props.changeTab} as='a'> \n            {props.title}  <Icon name='remove circle' onClick={props.removeTab}/> \n        </Menu.Item>\n    );\n}\n\nexport default DatasetTab;","import React, { Component } from 'react';\nimport { JsonForms } from '@jsonforms/react';\nimport { Grid, Menu} from 'semantic-ui-react';\nimport DatasetTab from './SemanticDatasetTab';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport personSchema from '../schemas/personSchema';\nimport addressSchema from '../schemas/addressSchema';\n\nimport personUISchema from '../schemas/personUISchema';\nimport addressUISchema from '../schemas/addressUISchema';\n\n// Initial data\nconst tabName = 'dataset2';\n\nconst DatasetOne = {\n    name: \"dataset1\",\n    title: \"Dataset 1\",\n    display: <JsonForms schema={personSchema} uischema={personUISchema} path='person'/>,\n    isActive: false\n};\nconst DatasetTwo = {   \n    name: \"dataset2\",\n    title: \"Dataset 2\",\n    display: <JsonForms schema={addressSchema} uischema={addressUISchema} path='address'/>,\n    isActive: false\n};\nconst DatasetThree = {   \n    name: \"dataset3\",\n    title: \"Dataset 3\",\n    display: <JsonForms schema={personSchema} uischema={personUISchema} path='person'/>,\n    isActive: false\n}\n\nconst initialDatasets = [\n    DatasetOne,\n    DatasetTwo,\n]\n\n\n// Tabs Component\nclass MenuTabularOnLeft extends Component {\n    constructor(props) {\n        super(props);\n        this.defaultDisplay = <h1>Hello, select a tab</h1>;\n        this.state = {\n            activeItem: tabName,\n            datasets: initialDatasets,\n            display: this.defaultDisplay\n        };\n\n        this.changeTab = this.changeTab.bind(this);\n        this.removeTab = this.removeTab.bind(this);\n        this.renderTabFromDataset = this.renderTabFromDataset.bind(this);\n        this.renderTabs = this.renderTabs.bind(this);\n        this.addDataset = this.addDataset.bind(this);\n    }\n\n    changeTab(tabName, display) {\n        this.setState({ \n            activeItem: tabName,\n            display: display,\n        })\n    }\n\n    removeTab(tabName) {\n        const tabs = this.state.datasets;\n        var display = this.state.display;\n        const newTabs= tabs.filter(obj => obj.name !== tabName);\n        if (newTabs === undefined || newTabs.length === 0) {\n            display = this.defaultDisplay;\n            console.log(\"here\")\n            console.log(display)\n            console.log('bye')\n        }\n        this.setState({ \n            display: display,\n            datasets: newTabs\n        })\n    }\n\n    renderTabFromDataset(dataset) {\n        const activeItem = this.state.activeItem;\n        const isActive = (activeItem === dataset.name) ? true : false;\n        return <DatasetTab\n                key={dataset.name}\n                name={dataset.name}\n                title={dataset.title}\n                display={dataset.display}\n                isActive={isActive}\n                changeTab={() => this.changeTab(dataset.name, dataset.display)}\n                removeTab={() => this.removeTab(dataset.name)}\n            />\n    }\n\n    renderTabs() {\n        const datasets = this.state.datasets;\n        const tabs = datasets.map(dataset => this.renderTabFromDataset(dataset));\n        return tabs;\n    }\n\n    addDataset() {\n        const datasets = this.state.datasets;\n        datasets.push(DatasetThree);\n        this.setState({\n            datasets: datasets\n        })\n    }\n\n    render() {\n        const display  = this.state.display;             \n        \n        var tabs = this.renderTabs();        \n\n        //const myArray = this.createTabs();\n        return (\n            <div>\n                <button onClick={this.addDataset}> Add Dataset 3</button>\n                <Grid>\n                    <Grid.Column width={4}>\n                        <Menu fluid vertical tabular>\n                            {tabs}\n                        </Menu>\n                    </Grid.Column>\n\n                    <Grid.Column stretched width={12}>\n                        {display}\n                    </Grid.Column>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default MenuTabularOnLeft;\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport DatasetTabs from \"./SemanticDatasetTabs\";\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Container style={{ margin: 20 }}>\n                <DatasetTabs />\n            </Container>\n        )\n    }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { combineReducers, createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport { Actions, jsonformsReducer } from '@jsonforms/core';\nimport { materialRenderers } from '@jsonforms/material-renderers';\n\nimport personSchema from './schemas/personSchema';\nimport addressSchema from './schemas/addressSchema';\n\n// Combine sub-schema to single for intial store\nconst schema = {\n    type: 'object',\n    properties: {\n        person: personSchema,\n        address: addressSchema\n    }\n}\n\n// Create store\nconst store = createStore(\n    combineReducers( { jsonforms: jsonformsReducer() }),  \n    { jsonforms: { renderers: materialRenderers }  }\n);\n\n// Initialize store\nstore.dispatch(Actions.init({}, schema));\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n"],"sourceRoot":""}